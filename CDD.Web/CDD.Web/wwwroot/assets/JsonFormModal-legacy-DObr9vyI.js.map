{"version":3,"file":"JsonFormModal-legacy-DObr9vyI.js","sources":["../../src/components/modal/JsonFormModal/FormInput.vue","../../src/components/modal/JsonFormModal/FormSelect.vue","../../src/components/modal/JsonFormModal/FormCheckbox.vue","../../src/components/modal/JsonFormModal/FormRadioGroup.vue","../../src/components/modal/JsonFormModal/FormTextarea.vue","../../src/components/modal/JsonFormModal/FormFile.vue","../../src/components/modal/JsonFormModal/FormDatetime.vue","../../src/components/modal/JsonFormModal/JsonFormModal.vue"],"sourcesContent":["<template>\r\n    <div class=\"mb-3\">\r\n        <label :for=\"field.modelId\" class=\"form-label\"\r\n            >{{ field.label }} <span v-if=\"field.required === true\" class=\"text-danger\"> * </span></label\r\n        >\r\n\r\n        <div class=\"input-group\">\r\n            <input\r\n                class=\"form-control\"\r\n                autocomplete=\"off\"\r\n                :id=\"field.modelId\"\r\n                :name=\"field.name || field.modelId\"\r\n                :type=\"field.type || 'text'\"\r\n                :placeholder=\"field.placeholder || ''\"\r\n                :disabled=\"field.disabled\"\r\n                :readonly=\"field.readonly\"\r\n                :maxlength=\"field.maxlength\"\r\n                :value=\"inputValue\"\r\n                @input=\"handleInput\"\r\n                @change=\"handleChange\"\r\n                @click=\"handleClick\"\r\n                :style=\"field.readonly && field.onClickCallback ? 'cursor: pointer;' : ''\"\r\n            />\r\n            <button\r\n                v-if=\"showClearButton\"\r\n                type=\"button\"\r\n                class=\"btn btn-esun-outline\"\r\n                @click=\"clearInput\"\r\n                :title=\"'清除 ' + field.label\"\r\n            >\r\n                <i class=\"bi bi-x-lg\"></i>\r\n            </button>\r\n        </div>\r\n        <small v-if=\"field.hint\" class=\"form-text text-muted\">{{ field.hint }}</small>\r\n        <div v-if=\"field.error\" style=\"white-space: pre\" class=\"alert_text text-danger\">{{ field.error }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, watch, computed } from 'vue';\r\nimport type { TextField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: TextField;\r\n    modelValue: string | null;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: string): void;\r\n}>();\r\n\r\nconst inputValue = ref(props.modelValue ?? '');\r\n\r\n// 計算是否顯示清除按鈕\r\nconst showClearButton = computed(() => {\r\n    if (props.field.readonly && props.field.onClickCallback) {\r\n        return true;\r\n    }\r\n    return false;\r\n});\r\n\r\nwatch(\r\n    () => props.modelValue,\r\n    (newVal) => {\r\n        inputValue.value = newVal ?? '';\r\n    }\r\n);\r\n\r\nfunction handleInput(e: Event) {\r\n    const inputVal = (e.target as HTMLInputElement).value;\r\n    const callback = props.field.onInputCallback;\r\n    let val = inputVal;\r\n    if (callback) {\r\n        const ret = callback(inputVal);\r\n        if (typeof ret === 'string') {\r\n            val = ret;\r\n        }\r\n    }\r\n    (e.target as HTMLInputElement).value = val;\r\n    inputValue.value = val;\r\n    emit('update:modelValue', val);\r\n}\r\n\r\nfunction handleChange(e: Event) {\r\n    const val = (e.target as HTMLInputElement).value;\r\n    props.field.onChangeCallback?.(val);\r\n}\r\n\r\nfunction handleClick() {\r\n    if (props.field.readonly && props.field.onClickCallback) {\r\n        props.field.onClickCallback();\r\n    }\r\n}\r\n\r\n// 清除輸入框內容\r\nfunction clearInput() {\r\n    inputValue.value = '';\r\n    emit('update:modelValue', '');\r\n    //\r\n    props.field.onClearInput?.();\r\n    // 如果有 onChangeCallback，也觸發它\r\n    props.field.onChangeCallback?.('');\r\n}\r\n</script>\r\n","<template>\r\n    <div class=\"mb-3\">\r\n        <label :for=\"field.modelId\" class=\"form-label\"\r\n            >{{ field.label }} <span v-if=\"field.required === true\" class=\"text-danger\"> * </span></label\r\n        >\r\n        <select\r\n            :id=\"field.modelId\"\r\n            class=\"form-select\"\r\n            :disabled=\"field.disabled\"\r\n            :value=\"modelValue\"\r\n            @change=\"handleChange\"\r\n        >\r\n            <option v-if=\"field.placeholder\" disabled value=\"\">\r\n                {{ field.placeholder }}\r\n            </option>\r\n            <option\r\n                v-for=\"(option, index) in field.options\"\r\n                :key=\"index\"\r\n                :value=\"option.value\"\r\n                :disabled=\"option.disabled\"\r\n                :title=\"option.tooltip\"\r\n            >\r\n                {{ option.label }}\r\n            </option>\r\n        </select>\r\n        <small v-if=\"field.hint\" class=\"form-text text-muted\">{{ field.hint }}</small>\r\n        <div v-if=\"field.error\" style=\"white-space: pre\" class=\"alert_text text-danger\">{{ field.error }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport type { SelectField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: SelectField;\r\n    modelValue: string;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: string): void;\r\n}>();\r\n\r\nfunction handleChange(e: Event) {\r\n    const val = (e.target as HTMLSelectElement).value;\r\n    emit('update:modelValue', val);\r\n    props.field.onChangeCallback?.(val);\r\n    props.field.onInputCallback?.(val);\r\n}\r\n</script>\r\n","<template>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\"\r\n            >{{ field.label }} <span v-if=\"field.required === true\" class=\"text-danger\"> * </span></label\r\n        >\r\n\r\n        <div>\r\n            <div\r\n                v-for=\"(option, index) in field.options\"\r\n                :key=\"index\"\r\n                :class=\"['form-check', field.inline ? 'form-check-inline' : '']\"\r\n            >\r\n                <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    :id=\"`${field.modelId}_${option.value}`\"\r\n                    :name=\"field.name || field.modelId\"\r\n                    :value=\"option.value\"\r\n                    :disabled=\"field.disabled || option.disabled\"\r\n                    :title=\"option.tooltip\"\r\n                    :checked=\"modelValue.includes(String(option.value))\"\r\n                    @change=\"(e) => handleChange(e, String(option.value))\"\r\n                />\r\n                <label class=\"form-check-label\" :for=\"`${field.modelId}_${option.value}`\">\r\n                    {{ option.label }}\r\n                </label>\r\n                <small v-if=\"option.hint\" class=\"form-text text-muted ms-2\">{{ option.hint }}</small>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"field.error\" style=\"white-space: pre\" class=\"alert_text text-danger\">{{ field.error }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport type { CheckboxField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: CheckboxField;\r\n    modelValue: string[];\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: string[]): void;\r\n}>();\r\n\r\nfunction handleChange(e: Event, optionValue: string) {\r\n    const checked = (e.target as HTMLInputElement).checked;\r\n    const newValue = [...props.modelValue];\r\n\r\n    if (checked && !newValue.includes(optionValue)) {\r\n        newValue.push(optionValue);\r\n    } else if (!checked && newValue.includes(optionValue)) {\r\n        const index = newValue.indexOf(optionValue);\r\n        newValue.splice(index, 1);\r\n    }\r\n\r\n    emit('update:modelValue', newValue);\r\n\r\n    props.field.onChangeCallback?.(newValue);\r\n    props.field.onInputCallback?.(newValue);\r\n}\r\n</script>\r\n","<template>\r\n    <div class=\"mb-3\">\r\n        <label :for=\"field.modelId\" class=\"form-label\"\r\n            >{{ field.label }} <span v-if=\"field.required === true\" class=\"text-danger\"> * </span></label\r\n        >\r\n        <small v-if=\"field.hint\" class=\"form-text text-muted\">{{ field.hint }}</small>\r\n        <div>\r\n            <div\r\n                v-for=\"(option, index) in field.options\"\r\n                :key=\"index\"\r\n                :class=\"['form-check', field.inline ? 'form-check-inline' : '']\"\r\n            >\r\n                <input\r\n                    class=\"form-check-input\"\r\n                    autocomplete=\"off\"\r\n                    type=\"radio\"\r\n                    :id=\"`${field.modelId}_${option.value}`\"\r\n                    :name=\"field.name || field.modelId\"\r\n                    :value=\"option.value\"\r\n                    :disabled=\"field.disabled || option.disabled\"\r\n                    :checked=\"String(modelValue) === String(option.value)\"\r\n                    @change=\"handleChange\"\r\n                />\r\n                <label class=\"form-check-label\" :for=\"`${field.modelId}_${option.value}`\">\r\n                    {{ option.label }}\r\n                </label>\r\n                <small v-if=\"option.hint\" class=\"form-text text-muted ms-2\">{{ option.hint }}</small>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"field.error\" style=\"white-space: pre\" class=\"alert_text text-danger\">{{ field.error }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { RadioField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: RadioField;\r\n    modelValue: string | boolean | number | null;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: string | boolean | number): void;\r\n}>();\r\n\r\nfunction handleChange(e: Event) {\r\n    const inputVal = (e.target as HTMLInputElement).value;\r\n    \r\n    // 根據原始 modelValue 的類型來轉換值\r\n    let val: string | boolean | number = inputVal;\r\n    \r\n    if (typeof props.modelValue === 'boolean') {\r\n        val = inputVal === 'true';\r\n    } else if (typeof props.modelValue === 'number') {\r\n        val = Number(inputVal);\r\n    }\r\n    \r\n    if (String(val) !== String(props.modelValue)) {\r\n        emit('update:modelValue', val);\r\n        props.field.onChangeCallback?.(val);\r\n        props.field.onInputCallback?.(val);\r\n    }\r\n}\r\n</script>\r\n","<template>\r\n    <div class=\"mb-3\">\r\n        <label :for=\"field.modelId\" class=\"form-label\"\r\n            >{{ field.label }} <span v-if=\"field.required === true\" class=\"text-danger\"> * </span></label\r\n        >\r\n        <small v-if=\"field.hint\" class=\"form-text text-muted\">{{ field.hint }}</small>\r\n        <textarea\r\n            :id=\"field.modelId\"\r\n            class=\"form-control\"\r\n            :placeholder=\"field.placeholder\"\r\n            :rows=\"field.rows\"\r\n            :maxlength=\"field.maxlength\"\r\n            :disabled=\"field.disabled\"\r\n            :value=\"modelValue\"\r\n            @input=\"handleInput\"\r\n            @change=\"handleChange\"\r\n        />\r\n        <div v-if=\"field.error\" style=\"white-space: pre\" class=\"alert_text text-danger\">{{ field.error }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport type { TextareaField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: TextareaField;\r\n    modelValue: string;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: string): void;\r\n}>();\r\n\r\nfunction handleInput(e: Event) {\r\n    const inputVal = (e.target as HTMLTextAreaElement).value;\r\n    const callback = props.field.onInputCallback;\r\n    let val = inputVal;\r\n    if (callback) {\r\n        const ret = callback(inputVal);\r\n        if (typeof ret === 'string') {\r\n            val = ret;\r\n        }\r\n    }\r\n    (e.target as HTMLTextAreaElement).value = val;\r\n    emit('update:modelValue', val);\r\n}\r\n\r\nfunction handleChange(e: Event) {\r\n    const val = (e.target as HTMLTextAreaElement).value;\r\n    props.field.onChangeCallback?.(val);\r\n}\r\n</script>\r\n","<template>\r\n    <div class=\"mb-3\">\r\n        <label :for=\"field.name\" class=\"form-label\">\r\n            {{ field.label }}\r\n            <span v-if=\"field.required\" class=\"text-danger\">*</span>\r\n        </label>\r\n\r\n        <input\r\n            :id=\"field.name\"\r\n            :name=\"field.name\"\r\n            type=\"file\"\r\n            class=\"form-control\"\r\n            :class=\"{ 'is-invalid': field.error }\"\r\n            :accept=\"field.accept\"\r\n            :multiple=\"field.multiple\"\r\n            :disabled=\"field.disabled\"\r\n            @change=\"handleFileChange\"\r\n            ref=\"fileInputRef\"\r\n        />\r\n\r\n        <!-- 顯示檔案資訊 -->\r\n        <div v-if=\"selectedFiles.length > 0\" class=\"mt-2\">\r\n            <small class=\"text-muted\">已選取的檔案：</small>\r\n            <ul class=\"list-unstyled\">\r\n                <li\r\n                    v-for=\"(file, index) in selectedFiles\"\r\n                    :key=\"index\"\r\n                    class=\"d-flex justify-content-between align-items-center\"\r\n                >\r\n                    <span class=\"text-truncate\"> {{ file.name }} ({{ formatFileSize(file.size) }}) </span>\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-sm btn-esun-outline-danger ms-2\"\r\n                        @click=\"removeFile(index)\"\r\n                        :disabled=\"field.disabled\"\r\n                    >\r\n                        ×\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <!-- 圖片預覽區塊 -->\r\n        <div v-if=\"imagePreviewUrls.length > 0\" class=\"mt-3\">\r\n            <small class=\"text-muted\">圖片預覽：</small>\r\n            <div class=\"row g-2 mt-1\">\r\n                <div v-for=\"(preview, index) in imagePreviewUrls\" :key=\"index\" class=\"col-6 col-md-4 col-lg-3\">\r\n                    <div class=\"position-relative\">\r\n                        <img\r\n                            :src=\"preview.url\"\r\n                            :alt=\"preview.fileName\"\r\n                            class=\"img-thumbnail w-100 preview-image\"\r\n                            @click=\"openImageModal(preview)\"\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-sm btn-danger position-absolute top-0 end-0 rounded-circle\"\r\n                            style=\"width: 24px; height: 24px; padding: 0; transform: translate(50%, -50%)\"\r\n                            @click=\"removeFile(preview.index)\"\r\n                            :disabled=\"field.disabled\"\r\n                            title=\"移除圖片\"\r\n                        >\r\n                            ×\r\n                        </button>\r\n                    </div>\r\n                    <small class=\"text-muted d-block text-truncate mt-1\">{{ preview.fileName }}</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 圖片放大模態框 -->\r\n        <div\r\n            v-if=\"showImageModal\"\r\n            class=\"modal show d-block\"\r\n            tabindex=\"-1\"\r\n            @click=\"closeImageModal\"\r\n            style=\"background-color: rgba(0, 0, 0, 0.8)\"\r\n        >\r\n            <div class=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                <div class=\"modal-content bg-transparent border-0\">\r\n                    <div class=\"modal-header border-0 pb-0\">\r\n                        <h5 class=\"modal-title text-white\">{{ selectedImage?.fileName }}</h5>\r\n                        <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"closeImageModal\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body text-center\">\r\n                        <img\r\n                            v-if=\"selectedImage\"\r\n                            :src=\"selectedImage.url\"\r\n                            :alt=\"selectedImage.fileName\"\r\n                            class=\"img-fluid\"\r\n                            style=\"max-height: 70vh\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 檔案限制說明 -->\r\n        <div v-if=\"field.hint || field.accept || field.maxSize\" class=\"form-text\">\r\n            <div v-if=\"field.hint\">{{ field.hint }}</div>\r\n            <div v-if=\"field.accept\">允許的檔案格式: {{ field.accept }}</div>\r\n            <div v-if=\"field.maxSize\">檔案大小限制: {{ formatFileSize(field.maxSize) }}</div>\r\n            <div v-if=\"field.maxFiles\">最多可上傳 {{ field.maxFiles }} 個檔案</div>\r\n        </div>\r\n\r\n        <!-- 錯誤訊息 -->\r\n        <div v-if=\"field.error\" class=\"invalid-feedback d-block\">\r\n            {{ field.error }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onUnmounted } from 'vue';\r\nimport type { FileField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: FileField;\r\n    modelValue: File[] | File | null;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: File[] | File | null): void;\r\n}>();\r\n\r\nconst fileInputRef = ref<HTMLInputElement>();\r\nconst selectedFiles = ref<File[]>([]);\r\n\r\n// 圖片預覽相關\r\ninterface ImagePreview {\r\n    url: string;\r\n    fileName: string;\r\n    index: number;\r\n}\r\n\r\nconst imagePreviewUrls = ref<ImagePreview[]>([]);\r\nconst showImageModal = ref(false);\r\nconst selectedImage = ref<ImagePreview | null>(null);\r\n\r\n// 初始化已選擇的檔案\r\nwatch(\r\n    () => props.modelValue,\r\n    (newValue) => {\r\n        if (newValue) {\r\n            if (Array.isArray(newValue)) {\r\n                selectedFiles.value = [...newValue];\r\n            } else {\r\n                selectedFiles.value = [newValue];\r\n            }\r\n        } else {\r\n            selectedFiles.value = [];\r\n        }\r\n        updateImagePreviews();\r\n    },\r\n    { immediate: true }\r\n);\r\n\r\n// 監聽檔案變化以更新圖片預覽\r\nwatch(\r\n    () => selectedFiles.value,\r\n    () => {\r\n        updateImagePreviews();\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n// 處理檔案選擇\r\nfunction handleFileChange(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    const files = Array.from(target.files || []);\r\n\r\n    // 驗證檔案\r\n    const validFiles = validateFiles(files);\r\n\r\n    if (validFiles.length > 0) {\r\n        if (props.field.multiple) {\r\n            // 多檔案模式：替換所有檔案或添加到現有檔案\r\n            selectedFiles.value = validFiles;\r\n            emit('update:modelValue', validFiles);\r\n        } else {\r\n            // 單檔案模式：只取第一個檔案\r\n            selectedFiles.value = [validFiles[0]];\r\n            emit('update:modelValue', validFiles[0]);\r\n        }\r\n    }\r\n\r\n    // 重置 input 以允許重複選擇相同檔案\r\n    if (fileInputRef.value) {\r\n        fileInputRef.value.value = '';\r\n    }\r\n}\r\n\r\n// 驗證檔案\r\nfunction validateFiles(files: File[]): File[] {\r\n    const validFiles: File[] = [];\r\n    let errorMessages: string[] = [];\r\n\r\n    for (const file of files) {\r\n        // 檢查檔案大小\r\n        if (props.field.maxSize && file.size > props.field.maxSize) {\r\n            errorMessages.push(`檔案 \"${file.name}\" 超過大小限制 ${formatFileSize(props.field.maxSize)}`);\r\n            continue;\r\n        }\r\n\r\n        // 檢查檔案格式\r\n        if (props.field.accept && !validateFileType(file, props.field.accept)) {\r\n            errorMessages.push(`檔案 \"${file.name}\" 格式不符合要求`);\r\n            continue;\r\n        }\r\n\r\n        validFiles.push(file);\r\n    }\r\n\r\n    // 檢查檔案數量限制\r\n    const totalFiles = selectedFiles.value.length + validFiles.length;\r\n    if (props.field.maxFiles && totalFiles > props.field.maxFiles) {\r\n        errorMessages.push(`最多只能上傳 ${props.field.maxFiles} 個檔案`);\r\n        return [];\r\n    }\r\n\r\n    // 設置錯誤訊息\r\n    if (errorMessages.length > 0) {\r\n        props.field.error = errorMessages.join(', ');\r\n    } else {\r\n        props.field.error = '';\r\n    }\r\n\r\n    return validFiles;\r\n}\r\n\r\n// 驗證檔案類型\r\nfunction validateFileType(file: File, accept: string): boolean {\r\n    const acceptTypes = accept.split(',').map((type) => type.trim());\r\n\r\n    for (const acceptType of acceptTypes) {\r\n        if (acceptType.startsWith('.')) {\r\n            // 檔案副檔名檢查\r\n            if (file.name.toLowerCase().endsWith(acceptType.toLowerCase())) {\r\n                return true;\r\n            }\r\n        } else if (acceptType.includes('*')) {\r\n            // MIME 類型萬用字元檢查 (例如: image/*)\r\n            const [mainType] = acceptType.split('/');\r\n            if (file.type.startsWith(mainType)) {\r\n                return true;\r\n            }\r\n        } else {\r\n            // 完整 MIME 類型檢查\r\n            if (file.type === acceptType) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// 移除檔案\r\nfunction removeFile(index: number) {\r\n    selectedFiles.value.splice(index, 1);\r\n\r\n    if (props.field.multiple) {\r\n        emit('update:modelValue', selectedFiles.value.length > 0 ? selectedFiles.value : null);\r\n    } else {\r\n        emit('update:modelValue', null);\r\n    }\r\n}\r\n\r\n// 判斷是否為圖片檔案\r\nfunction IsImageFile(file: File): boolean {\r\n    return file.type.startsWith('image/');\r\n}\r\n\r\n// 更新圖片預覽\r\nfunction updateImagePreviews() {\r\n    // 清除舊的預覽 URL\r\n    imagePreviewUrls.value.forEach((preview) => {\r\n        URL.revokeObjectURL(preview.url);\r\n    });\r\n    imagePreviewUrls.value = [];\r\n\r\n    // 生成新的預覽 URL\r\n    selectedFiles.value.forEach((file, index) => {\r\n        if (IsImageFile(file)) {\r\n            const url = URL.createObjectURL(file);\r\n            imagePreviewUrls.value.push({\r\n                url,\r\n                fileName: file.name,\r\n                index\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n// 開啟圖片模態框\r\nfunction openImageModal(preview: ImagePreview) {\r\n    selectedImage.value = preview;\r\n    showImageModal.value = true;\r\n}\r\n\r\n// 關閉圖片模態框\r\nfunction closeImageModal() {\r\n    showImageModal.value = false;\r\n    selectedImage.value = null;\r\n}\r\n\r\n// 清理資源\r\nonUnmounted(() => {\r\n    imagePreviewUrls.value.forEach((preview) => {\r\n        URL.revokeObjectURL(preview.url);\r\n    });\r\n});\r\n\r\n// 格式化檔案大小\r\nfunction formatFileSize(bytes: number): string {\r\n    if (bytes === 0) return '0 B';\r\n\r\n    const k = 1024;\r\n    const sizes = ['B', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.text-truncate {\r\n    max-width: 300px;\r\n}\r\n\r\n.preview-image {\r\n    height: 120px;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n    transition: transform 0.2s ease;\r\n}\r\n\r\n.preview-image:hover {\r\n    transform: scale(1.02);\r\n}\r\n\r\n.modal {\r\n    z-index: 1060;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"mb-3\">\r\n        <label :for=\"field.name\" class=\"form-label\">\r\n            {{ field.label }}\r\n            <span v-if=\"field.required\" class=\"text-danger\"> * </span>\r\n        </label>\r\n        <small v-if=\"field.hint\" class=\"form-text text-muted d-block\">{{ field.hint }}</small>\r\n\r\n        <input\r\n            :id=\"field.name\"\r\n            type=\"datetime-local\"\r\n            class=\"form-control\"\r\n            :class=\"{ 'is-invalid': field.error }\"\r\n            :value=\"formatDatetimeForInput(modelValue)\"\r\n            @input=\"handleDateChange\"\r\n            :disabled=\"field.disabled\"\r\n            :min=\"field.minDate\"\r\n            :max=\"field.maxDate\"\r\n            :placeholder=\"field.placeholder\"\r\n        />\r\n\r\n        <!-- 錯誤訊息 -->\r\n        <div v-if=\"field.error\" class=\"invalid-feedback d-block\">\r\n            {{ field.error }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed } from 'vue';\r\nimport type { DatetimeField } from './schema';\r\n\r\nconst props = defineProps<{\r\n    field: DatetimeField;\r\n    modelValue: any;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', value: any): void;\r\n}>();\r\n\r\n// 格式化日期時間為 input 所需的格式\r\nfunction formatDatetimeForInput(dateValue: string | Date | null | undefined): string {\r\n    if (!dateValue) return '';\r\n\r\n    let date: Date;\r\n    if (typeof dateValue === 'string') {\r\n        date = new Date(dateValue);\r\n    } else {\r\n        date = dateValue;\r\n    }\r\n\r\n    if (isNaN(date.getTime())) return '';\r\n\r\n    // 格式化為 YYYY-MM-DDTHH:MM\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n}\r\n\r\n// 處理日期變更\r\nfunction handleDateChange(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    const value = target.value;\r\n\r\n    emit('update:modelValue', value ? new Date(value) : null);\r\n\r\n    if (props.field.onInputCallback) {\r\n        props.field.onInputCallback(value ? new Date(value) : null);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.is-invalid {\r\n    border-color: #dc3545;\r\n}\r\n\r\n.invalid-feedback {\r\n    color: #dc3545;\r\n    font-size: 0.875rem;\r\n    margin-top: 0.25rem;\r\n}\r\n</style>\r\n","<template>\r\n    <div\r\n        v-if=\"props.myModal.showModal\"\r\n        class=\"modal show d-block\"\r\n        tabindex=\"-1\"\r\n        :aria-labelledby=\"props.myModal.modalId\"\r\n        :aria-hidden=\"!props.myModal.showModal\"\r\n        @click=\"handleBackgroundClick\"\r\n        :class=\"{ 'static-backdrop-animation': animateBackdrop }\"\r\n    >\r\n        <div class=\"modal-dialog\" :class=\"[myModal.size, myModal.scrollable ? 'modal-dialog-scrollable' : '']\">\r\n            <div class=\"modal-content\">\r\n                <form @submit.prevent=\"handleSubmit\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">{{ myModal.title }}</h5>\r\n                        <button type=\"button\" class=\"btn-close\" @click=\"$emit('cancel')\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                                <div\r\n                                    v-for=\"group in reactiveSchema\"\r\n                                    :key=\"group.title || 'default'\"\r\n                                    :class=\"group.gridClass\"\r\n                                >\r\n                                    <div v-for=\"field in group.fields\" :key=\"field.modelId\">\r\n                                        <FormInput\r\n                                            v-if=\"field.type === 'text'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                        <FormTextarea\r\n                                            v-else-if=\"field.type === 'textarea'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                        <FormSelect\r\n                                            v-else-if=\"field.type === 'select'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                        <FormCheckbox\r\n                                            v-else-if=\"field.type === 'checkbox'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                        <FormRadioGroup\r\n                                            v-else-if=\"field.type === 'radio'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                        <FormFile\r\n                                            v-else-if=\"field.type === 'file'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                        <FormDatetime\r\n                                            v-else-if=\"field.type === 'datetime'\"\r\n                                            :field=\"field\"\r\n                                            v-model=\"props.modelValue[field.modelId]\"\r\n                                            @update:modelValue=\"(val) => handleInput(field, val)\"\r\n                                        />\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                            </div>\r\n                            <div v-if=\"error\" class=\"text-danger\">{{ error }}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button class=\"btn btn-esun-outline\" @click.prevent=\"$emit('cancel')\">取消</button>\r\n                        <button type=\"submit\" class=\"btn btn-esun-primary\">確定</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, watchEffect, onMounted, computed } from 'vue';\r\nimport type { Field, FieldsGridGroup, MyModal } from './schema';\r\nimport FormInput from './FormInput.vue';\r\nimport FormSelect from './FormSelect.vue';\r\nimport FormCheckbox from './FormCheckbox.vue';\r\nimport FormRadioGroup from './FormRadioGroup.vue';\r\nimport FormTextarea from './FormTextarea.vue';\r\nimport FormFile from './FormFile.vue';\r\nimport FormDatetime from './FormDatetime.vue';\r\n\r\nconst props = defineProps<{\r\n    myModal: MyModal;\r\n    modelValue: Record<string, any>;\r\n}>();\r\nconst emit = defineEmits<{\r\n    (e: 'update:modelValue', payload: Record<string, any>): void;\r\n    (e: 'submit', payload: Record<string, any>): void;\r\n    (e: 'cancel'): void;\r\n}>();\r\n\r\nconst error = ref('');\r\nconst animateBackdrop = ref(false);\r\nconst reactiveSchema = ref<FieldsGridGroup[]>([]);\r\n\r\nwatchEffect(() => {\r\n    animateBackdrop.value = props.myModal.staticBackdrop;\r\n});\r\n\r\nonMounted(() => {\r\n    // 檢查 modelId 重複\r\n    const modelIds: string[] = [];\r\n    props.myModal.fieldGroups.forEach((group) => {\r\n        group.fields.forEach((field) => {\r\n            modelIds.push(field.modelId);\r\n        });\r\n    });\r\n    const duplicates = modelIds.filter((id, idx, arr) => arr.indexOf(id) !== idx);\r\n    if (duplicates.length > 0) {\r\n        throw new Error(`Duplicate field modelIds: ${[...new Set(duplicates)].join(', ')}`);\r\n    }\r\n\r\n    // 建立 reactiveSchema（保留 callback）\r\n    reactiveSchema.value = props.myModal.fieldGroups.map((group) => ({\r\n        ...group,\r\n        fields: group.fields.map((field) => ({\r\n            ...field\r\n        }))\r\n    }));\r\n\r\n    // 初始化 modelValue 欄位（若尚未填值）\r\n    props.myModal.fieldGroups.forEach((group) => {\r\n        group.fields.forEach((field) => {\r\n            if (!(field.modelId in props.modelValue)) {\r\n                switch (field.type) {\r\n                    case 'checkbox':\r\n                        props.modelValue[field.modelId] = [];\r\n                        break;\r\n                    case 'file':\r\n                        props.modelValue[field.modelId] = null;\r\n                        break;\r\n                    case 'datetime':\r\n                        props.modelValue[field.modelId] = null;\r\n                        break;\r\n                    default:\r\n                        props.modelValue[field.modelId] = '';\r\n                }\r\n            }\r\n\r\n            // 欄位屬性預設值\r\n            if (field.required === undefined) {\r\n                field.required = true;\r\n            }\r\n            if ('inline' in field && (field as any).inline === undefined) {\r\n                (field as any).inline = true;\r\n            }\r\n            if (field.disabled === undefined) {\r\n                field.disabled = false;\r\n            }\r\n            if (!field.name) {\r\n                field.name = field.modelId;\r\n            }\r\n            if (field.placeholder === undefined) {\r\n                field.placeholder = field.label || '';\r\n            }\r\n            if ('rows' in field && (field as any).rows === undefined) {\r\n                (field as any).rows = 12;\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n// 當輸入時觸發 input callback\r\nfunction handleInput(field: Field, val: any) {\r\n    if (field.onInputCallback) {\r\n        field.onInputCallback(val);\r\n    }\r\n\r\n    // 清除該欄錯誤（如果有）\r\n    field.error = '';\r\n    error.value = '';\r\n}\r\n\r\n// 清除特定欄位的錯誤訊息\r\nfunction clearFieldError(fieldModelId: string) {\r\n    reactiveSchema.value.forEach((group) => {\r\n        group.fields.forEach((field) => {\r\n            if (field.modelId === fieldModelId) {\r\n                field.error = '';\r\n                // 如果這是最後一個有錯誤的欄位，也清除全域錯誤\r\n                const hasOtherErrors = reactiveSchema.value.some((g) =>\r\n                    g.fields.some((f) => f.modelId !== fieldModelId && f.error)\r\n                );\r\n                if (!hasOtherErrors) {\r\n                    error.value = '';\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// 背景點擊邏輯\r\nconst handleBackgroundClick = (event: MouseEvent) => {\r\n    if (event.target === event.currentTarget) {\r\n        if (props.myModal.staticBackdrop) {\r\n            animateBackdrop.value = true;\r\n            setTimeout(() => {\r\n                animateBackdrop.value = false;\r\n            }, 150);\r\n        } else {\r\n            emit('cancel');\r\n        }\r\n    }\r\n};\r\n\r\n// 表單送出驗證\r\nfunction handleSubmit() {\r\n    error.value = '';\r\n    const missing: Field[] = [];\r\n\r\n    reactiveSchema.value.forEach((group) => {\r\n        group.fields.forEach((field) => {\r\n            field.error = '';\r\n            const val = props.modelValue[field.modelId];\r\n            if (field.required && isEmptyValue(val)) {\r\n                field.error = '請填寫' + field.label + ' ! \\n';\r\n                missing.push(field);\r\n            }\r\n\r\n            // 自訂 callback 檢查\r\n            if (field.onSubmitCheckCallback) {\r\n                const err = field.onSubmitCheckCallback(val, props.modelValue);\r\n                if (err) {\r\n                    field.error += err + '\\n';\r\n                    error.value += err + '\\n';\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    if (missing.length > 0) {\r\n        error.value = '請填寫所有必填欄位';\r\n        console.warn(\r\n            'Missing fields:',\r\n            missing.map((f) => f.modelId)\r\n        );\r\n        return;\r\n    } else if (error.value !== '') {\r\n        console.warn('Error fields:', error.value);\r\n        return;\r\n    }\r\n\r\n    emit('update:modelValue', props.modelValue); // 可選\r\n    emit('submit', props.modelValue);\r\n}\r\n\r\nfunction isEmptyValue(val: any) {\r\n    return (\r\n        val === null ||\r\n        val === undefined ||\r\n        (typeof val === 'string' && val.trim() === '') ||\r\n        (Array.isArray(val) && val.length === 0)\r\n    );\r\n}\r\n\r\n// 暴露方法給父組件使用\r\ndefineExpose({\r\n    clearFieldError\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n.modal-dialog {\r\n    background-color: transparent;\r\n}\r\n\r\n.static-backdrop-animation {\r\n    animation: staticBackdropAnimation 0.15s ease-in-out;\r\n}\r\n\r\n.modal-dialog-scrollable .modal-body {\r\n    max-height: calc(100vh - 200px);\r\n    overflow-y: auto;\r\n}\r\n\r\n@keyframes staticBackdropAnimation {\r\n    0% {\r\n        transform: scale(1);\r\n    }\r\n    50% {\r\n        transform: scale(1.02);\r\n    }\r\n    100% {\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n.alert_text {\r\n    letter-spacing: 1px;\r\n    line-height: 1.7;\r\n}\r\n</style>\r\n"],"names":["props","__props","emit","__emit","inputValue","ref","_props$modelValue","modelValue","showClearButton","computed","field","readonly","onClickCallback","handleInput","e","inputVal","target","value","callback","onInputCallback","val","ret","handleChange","_props$field$onChange","_props$field","onChangeCallback","call","handleClick","clearInput","_props$field$onClearI","_props$field2","_props$field$onChange2","_props$field3","onClearInput","watch","newVal","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","for","modelId","class","label","required","_hoisted_3","_hoisted_4","autocomplete","id","name","type","placeholder","disabled","maxlength","onInput","onChange","onClick","style","title","hint","_hoisted_7","error","_hoisted_8","_props$field$onChange3","_props$field4","_props$field$onInputC","_props$field5","_hoisted_5","_Fragment","options","option","index","key","tooltip","_toDisplayString","_hoisted_6","_hoisted_2","_normalizeClass","inline","concat","checked","includes","String","optionValue","_props$field$onChange4","_props$field6","_props$field$onInputC2","_props$field7","newValue","_toConsumableArray","push","indexOf","splice","_props$field$onChange5","_props$field8","_props$field$onInputC3","_props$field9","Number","_props$field$onChange6","_props$field0","rows","fileInputRef","selectedFiles","imagePreviewUrls","showImageModal","selectedImage","handleFileChange","event","validFiles","files","_step","errorMessages","_iterator","_createForOfIteratorHelper","s","n","done","file","maxSize","size","formatFileSize","accept","validateFileType","err","f","totalFiles","length","maxFiles","join","validateFiles","Array","from","multiple","_step2","_iterator2","split","map","trim","acceptType","startsWith","toLowerCase","endsWith","mainType","_slicedToArray","removeFile","updateImagePreviews","forEach","preview","URL","revokeObjectURL","url","IsImageFile","createObjectURL","fileName","closeImageModal","bytes","i","Math","floor","log","parseFloat","pow","toFixed","isArray","immediate","deep","onUnmounted","_cache","_renderList","$event","_hoisted_9","_hoisted_10","_hoisted_11","src","alt","openImageModal","width","height","padding","transform","_hoisted_13","_hoisted_14","tabindex","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_selectedImage$value","_hoisted_19","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_26","formatDatetimeForInput","dateValue","date","Date","isNaN","getTime","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","handleDateChange","min","minDate","max","maxDate","animateBackdrop","reactiveSchema","watchEffect","myModal","staticBackdrop","onMounted","modelIds","fieldGroups","group","fields","duplicates","filter","idx","arr","Error","Set","_objectSpread","handleBackgroundClick","currentTarget","setTimeout","handleSubmit","missing","isEmptyValue","onSubmitCheckCallback","console","warn","__expose","clearFieldError","fieldModelId","some","g","showModal","modalId","scrollable","onSubmit","$emit","gridClass","_createBlock","FormInput","FormTextarea","FormSelect","FormCheckbox","FormRadioGroup","FormFile","FormDatetime"],"mappings":"81JA0CMA,EAAQC,EAKRC,EAAOC,EAIPC,EAAaC,EAAU,QAAVC,EAAIN,EAAMO,kBAAA,IAAAD,EAAAA,EAAc,IAGrCE,EAAkBC,GAAS,WAC7B,SAAIT,EAAMU,MAAMC,WAAYX,EAAMU,MAAME,gBAGjC,IAUX,SAASC,EAAYC,GACX,IAAAC,EAAYD,EAAEE,OAA4BC,MAC1CC,EAAWlB,EAAMU,MAAMS,gBACzBC,EAAML,EACV,GAAIG,EAAU,CACJ,IAAAG,EAAMH,EAASH,GACF,iBAARM,IACDD,EAAAC,EACV,CAEHP,EAAEE,OAA4BC,MAAQG,EACvChB,EAAWa,MAAQG,EACnBlB,EAAK,oBAAqBkB,EAAG,CAGjC,SAASE,EAAaR,GAAU,IAAAS,EAAAC,EACtBJ,EAAON,EAAEE,OAA4BC,cACrCM,GAAAC,EAAAxB,EAAAU,OAAMe,+BAANF,EAAAG,KAAAF,EAAyBJ,EAAG,CAGtC,SAASO,IACD3B,EAAMU,MAAMC,UAAYX,EAAMU,MAAME,iBACpCZ,EAAMU,MAAME,iBAChB,CAIJ,SAASgB,IAAa,IAAAC,EAAAC,EAAAC,EAAAC,EAClB5B,EAAWa,MAAQ,GACnBf,EAAK,oBAAqB,IAEC,QAA3B2B,GAAAC,EAAA9B,EAAMU,OAAMuB,oBAAe,IAAAJ,GAA3BA,EAAAH,KAAAI,WAEMC,GAAAC,EAAAhC,EAAAU,OAAMe,wBAANM,OAAAA,EAAAL,KAAAM,EAAyB,GAAE,QAxCrCE,GACI,WAAM,OAAAlC,EAAMO,UAAA,IACZ,SAAC4B,GACG/B,EAAWa,MAAQkB,QAAAA,EAAU,EAAA,kBA/DjC,OAAAC,IAAAC,EAkCM,MAlCNC,EAkCM,CAjCFC,EAC4G,QAAA,CADpGC,IAAK9B,EAAKA,MAAC+B,QAASC,MAAM,mBAC1BhC,EAAKA,MAACiC,OAAQ,IAAC,IAA0B,IAAdjC,EAAAA,MAAMkC,cAAlBP,EAAmE,OAAnEQ,EAAyD,uBAGhFN,EA0BM,MA1BNO,EA0BM,CAzBFP,EAeE,QAAA,CAdEG,MAAM,eACNK,aAAa,MACZC,GAAItC,EAAKA,MAAC+B,QACVQ,KAAMvC,EAAKA,MAACuC,MAAQvC,EAAAA,MAAM+B,QAC1BS,KAAMxC,EAAKA,MAACwC,MAAI,OAChBC,YAAazC,EAAKA,MAACyC,aAAW,GAC9BC,SAAU1C,EAAKA,MAAC0C,SAChBzC,SAAUD,EAAKA,MAACC,SAChB0C,UAAW3C,EAAKA,MAAC2C,UACjBpC,MAAOb,EAAUa,MACjBqC,QAAOzC,EACP0C,SAAQjC,EACRkC,QAAO7B,EACP8B,QAAO/C,EAAKA,MAACC,UAAYD,EAAAA,MAAME,gBAAe,mBAAA,gBAGzCJ,EAAeS,WADzBoB,EAQS,SAAA,OANLa,KAAK,SACLR,MAAM,uBACLc,QAAO5B,EACP8B,MAAK,MAAUhD,EAAKA,MAACiC,oBAEtBJ,EAA0B,IAAA,CAAvBG,MAAM,cAAY,MAAA,sBAGhBhC,EAAAA,MAAMiD,MAAnBvB,IAAAC,EAA8E,QAA9EuB,EAAyDlD,EAAAA,EAAAA,MAAMiD,MAAI,aACxDjD,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAAuG,MAAvGyB,EAAmFpD,EAAAA,EAAAA,MAAMmD,OAAK,uYCDhG7D,EAAQC,EAKRC,EAAOC,EAIb,SAASmB,EAAaR,GAAUiD,IAAAA,EAAAC,EAAAC,EAAAC,EACtB9C,EAAON,EAAEE,OAA6BC,MAC5Cf,EAAK,oBAAqBkB,WACpB2C,GAAAC,EAAAhE,EAAAU,OAAMe,wBAANsC,OAAAA,EAAArC,KAAAsC,EAAyB5C,WACzB6C,GAAAC,EAAAlE,EAAAU,OAAMS,8BAAN8C,EAAAvC,KAAAwC,EAAwB9C,EAAG,sBA7CjC,OAAAgB,IAAAC,EA0BM,MA1BNC,EA0BM,CAzBFC,EAC4G,QAAA,CADpGC,IAAK9B,EAAKA,MAAC+B,QAASC,MAAM,mBAC1BhC,EAAKA,MAACiC,OAAQ,IAAC,IAA0B,IAAdjC,EAAAA,MAAMkC,cAAlBP,EAAmE,OAAnEQ,EAAyD,uBAEhFN,EAmBS,SAAA,CAlBJS,GAAItC,EAAKA,MAAC+B,QACXC,MAAM,cACLU,SAAU1C,EAAKA,MAAC0C,SAChBnC,MAAOV,EAAUA,WACjBgD,SAAQjC,IAEKZ,EAAAA,MAAMyC,aAApBf,IAAAC,EAES,SAFT8B,EACOzD,EAAAA,EAAAA,MAAMyC,aAAW,cAExBf,GAAA,GAAAC,EAQS+B,SAPqB1D,EAAKA,MAAC2D,SAAxB,SAAAC,EAAQC,cADpBlC,EAQS,SAAA,CANJmC,IAAKD,EACLtD,MAAOqD,EAAOrD,MACdmC,SAAUkB,EAAOlB,SACjBM,MAAOY,EAAOG,SAEZC,EAAAJ,EAAO3B,OAAK,EAAAgC,mBAGVjE,EAAAA,MAAMiD,MAAnBvB,IAAAC,EAA8E,QAA9EuB,EAAyDlD,EAAAA,EAAAA,MAAMiD,MAAI,aACxDjD,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAAuG,MAAvGyB,EAAmFpD,EAAAA,EAAAA,MAAMmD,OAAK,2YCUhG7D,EAAQC,EAKRC,EAAOC,uBAxCT,OAAAiC,IAAAC,EA6BM,MA7BNC,EA6BM,CA5BFC,EAC4G,QAD5GqC,EAC4G,KAApGlE,EAAKA,MAACiC,OAAQ,IAAC,IAA0B,IAAdjC,EAAAA,MAAMkC,cAAlBP,EAAmE,OAAnEQ,EAAyD,mBAGhFN,EAsBM,MAAA,KAAA,EArBFH,GAAA,GAAAC,EAoBM+B,SAnBwB1D,EAAKA,MAAC2D,SAAxB,SAAAC,EAAQC,cADpBlC,EAoBM,MAAA,CAlBDmC,IAAKD,EACL7B,MAAKmC,EAAA,CAAA,aAAiBnE,EAAKA,MAACoE,OAAM,oBAAA,OAEnCvC,EAUE,QAAA,CATEG,MAAM,mBACNQ,KAAK,WACJF,aAAOtC,EAAKA,MAAC+B,QAAOsC,KAAAA,OAAIT,EAAOrD,OAC/BgC,KAAMvC,EAAKA,MAACuC,MAAQvC,EAAAA,MAAM+B,QAC1BxB,MAAOqD,EAAOrD,MACdmC,SAAU1C,EAAKA,MAAC0C,UAAYkB,EAAOlB,SACnCM,MAAOY,EAAOG,QACdO,QAASzE,aAAW0E,SAASC,OAAOZ,EAAOrD,QAC3CsC,SAAM,SAAGzC,GAAM,OAwB3B,SAAaA,EAAUqE,GAAqBC,IAAAA,EAAAC,EAAAC,EAAAC,EAC3CP,EAAWlE,EAAEE,OAA4BgE,QACzCQ,EAAWC,EAAIzF,EAAMO,YAE3B,GAAIyE,IAAYQ,EAASP,SAASE,GAC9BK,EAASE,KAAKP,QACP,IAACH,GAAWQ,EAASP,SAASE,GAAc,CAC7C,IAAAZ,EAAQiB,EAASG,QAAQR,GACtBK,EAAAI,OAAOrB,EAAO,EAAC,CAG5BrE,EAAK,oBAAqBsF,WAEpBJ,GAAAC,EAAArF,EAAAU,OAAMe,wBAAN2D,OAAAA,EAAA1D,KAAA2D,EAAyBG,WACzBF,GAAAC,EAAAvF,EAAAU,OAAMS,8BAANmE,EAAA5D,KAAA6D,EAAwBC,EAAQ,CAtCNlE,CAAaR,EAAGoE,OAAOZ,EAAOrD,OAAK,cAEvDsB,EAEQ,QAAA,CAFDG,MAAM,mBAAoBF,IAAA,GAAAuC,OAAQrE,EAAKA,MAAC+B,QAAOsC,KAAAA,OAAIT,EAAOrD,QAC1DyD,EAAAJ,EAAO3B,OAAK,EAAAwB,GAENG,EAAOX,MAApBvB,IAAAC,EAAqF,QAArFsC,EAA+DD,EAAAJ,EAAOX,MAAI,4BAGvEjD,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAAuG,MAAvGuB,EAAmFlD,EAAAA,EAAAA,MAAMmD,OAAK,4bCOhG7D,EAAQC,EAKRC,EAAOC,EAIb,SAASmB,EAAaR,GACZ,IAWwC+E,EAAAC,EAAAC,EAAAC,EAXxCjF,EAAYD,EAAEE,OAA4BC,MAG5CG,EAAiCL,GAEL,kBAArBf,EAAMO,WACba,EAAmB,SAAbL,EAC6B,iBAArBf,EAAMO,aACpBa,EAAM6E,OAAOlF,IAGbmE,OAAO9D,KAAS8D,OAAOlF,EAAMO,eAC7BL,EAAK,oBAAqBkB,WACpByE,GAAAC,EAAA9F,EAAAU,OAAMe,+BAANoE,EAAAnE,KAAAoE,EAAyB1E,WACzB2E,GAAAC,EAAAhG,EAAAU,OAAMS,8BAAN4E,EAAArE,KAAAsE,EAAwB5E,GAClC,sBA5DA,OAAAgB,IAAAC,EA6BM,MA7BNC,EA6BM,CA5BFC,EAC4G,QAAA,CADpGC,IAAK9B,EAAKA,MAAC+B,QAASC,MAAM,mBAC1BhC,EAAKA,MAACiC,OAAQ,IAAC,IAA0B,IAAdjC,EAAAA,MAAMkC,cAAlBP,EAAmE,OAAnEQ,GAAyD,uBAEnEnC,EAAAA,MAAMiD,MAAnBvB,IAAAC,EAA8E,QAA9ES,GAAyDpC,EAAAA,EAAAA,MAAMiD,MAAI,aACnEpB,EAsBM,MAAA,KAAA,EArBFH,GAAA,GAAAC,EAoBM+B,SAnBwB1D,EAAKA,MAAC2D,SAAxB,SAAAC,EAAQC,cADpBlC,EAoBM,MAAA,CAlBDmC,IAAKD,EACL7B,MAAKmC,EAAA,CAAA,aAAiBnE,EAAKA,MAACoE,OAAM,oBAAA,OAEnCvC,EAUE,QAAA,CATEG,MAAM,mBACNK,aAAa,MACbG,KAAK,QACJF,aAAOtC,EAAKA,MAAC+B,QAAOsC,KAAAA,OAAIT,EAAOrD,OAC/BgC,KAAMvC,EAAKA,MAACuC,MAAQvC,EAAAA,MAAM+B,QAC1BxB,MAAOqD,EAAOrD,MACdmC,SAAU1C,EAAKA,MAAC0C,UAAYkB,EAAOlB,SACnC4B,QAASE,OAAO3E,EAAAA,cAAgB2E,OAAOZ,EAAOrD,OAC9CsC,SAAQjC,eAEbiB,EAEQ,QAAA,CAFDG,MAAM,mBAAoBF,IAAA,GAAAuC,OAAQrE,EAAKA,MAAC+B,QAAOsC,KAAAA,OAAIT,EAAOrD,QAC1DyD,EAAAJ,EAAO3B,OAAK,EAAAgC,IAENL,EAAOX,MAApBvB,IAAAC,EAAqF,QAArFuB,GAA+Dc,EAAAJ,EAAOX,MAAI,4BAGvEjD,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAAuG,MAAvGyB,GAAmFpD,EAAAA,EAAAA,MAAMmD,OAAK,mXCLhG7D,EAAQC,EAKRC,EAAOC,EAIb,SAASU,EAAYC,GACX,IAAAC,EAAYD,EAAEE,OAA+BC,MAC7CC,EAAWlB,EAAMU,MAAMS,gBACzBC,EAAML,EACV,GAAIG,EAAU,CACJ,IAAAG,EAAMH,EAASH,GACF,iBAARM,IACDD,EAAAC,EACV,CAEHP,EAAEE,OAA+BC,MAAQG,EAC1ClB,EAAK,oBAAqBkB,EAAG,CAGjC,SAASE,EAAaR,GAAU,IAAAoF,EAAAC,EACtB/E,EAAON,EAAEE,OAA+BC,cACxCiF,GAAAC,EAAAnG,EAAAU,OAAMe,+BAANyE,EAAAxE,KAAAyE,EAAyB/E,EAAG,sBAhDlC,OAAAgB,IAAAC,EAiBM,MAjBNC,GAiBM,CAhBFC,EAC4G,QAAA,CADpGC,IAAK9B,EAAKA,MAAC+B,QAASC,MAAM,mBAC1BhC,EAAKA,MAACiC,OAAQ,IAAC,IAA0B,IAAdjC,EAAAA,MAAMkC,cAAlBP,EAAmE,OAAnEQ,GAAyD,wBAEnEnC,EAAAA,MAAMiD,MAAnBvB,IAAAC,EAA8E,QAA9ES,GAAyDpC,EAAAA,EAAAA,MAAMiD,MAAI,aACnEpB,EAUE,WAAA,CATGS,GAAItC,EAAKA,MAAC+B,QACXC,MAAM,eACLS,YAAazC,EAAKA,MAACyC,YACnBiD,KAAM1F,EAAKA,MAAC0F,KACZ/C,UAAW3C,EAAKA,MAAC2C,UACjBD,SAAU1C,EAAKA,MAAC0C,SAChBnC,MAAOV,EAAUA,WACjB+C,QAAOzC,EACP0C,SAAQjC,eAEFZ,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAAuG,MAAvGsC,GAAmFjE,EAAAA,EAAAA,MAAMmD,OAAK,w3BCmGhG7D,EAAQC,EAKRC,EAAOC,EAIPkG,EAAehG,IACfiG,EAAgBjG,EAAY,IAS5BkG,EAAmBlG,EAAoB,IACvCmG,EAAiBnG,GAAI,GACrBoG,EAAgBpG,EAAyB,MA8B/C,SAASqG,EAAiBC,GACtB,IAAM3F,EAAS2F,EAAM3F,OAIf4F,EAqBV,SAAuBC,GACnB,IAG0BC,EAHpBF,EAAqB,GACvBG,EAA0B,GAACC,EAAAC,EAEZJ,GAAnB,IAAA,IAAAG,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAA0B,KAAfC,UAEHrH,EAAMU,MAAM4G,SAAWD,EAAKE,KAAOvH,EAAMU,MAAM4G,QACjCP,EAAArB,KAAA,OAAAX,OAAYsC,EAAKpE,KAAI8B,aAAAA,OAAYyC,EAAexH,EAAMU,MAAM4G,YAK1EtH,EAAMU,MAAM+G,QAAWC,EAAiBL,EAAMrH,EAAMU,MAAM+G,QAK9Db,EAAWlB,KAAK2B,GAJZN,EAAcrB,KAAKX,OAAAA,OAAOsC,EAAKpE,KAAe,aAI9B,CAAA,CAAA0E,MAAAA,GAAAX,EAAAlG,EAAA6G,WAAAX,EAAAY,GAAA,CAIxB,IAAMC,EAAavB,EAAcrF,MAAM6G,OAASlB,EAAWkB,OAC3D,GAAI9H,EAAMU,MAAMqH,UAAYF,EAAa7H,EAAMU,MAAMqH,SAEjD,OADAhB,EAAcrB,KAAK,UAAAX,OAAU/E,EAAMU,MAAMqH,SAAQ,SAC1C,GAIPhB,EAAce,OAAS,EACvB9H,EAAMU,MAAMmD,MAAQkD,EAAciB,KAAK,MAEvChI,EAAMU,MAAMmD,MAAQ,GAGjB,OAAA+C,CAAA,CAvDYqB,CAHLC,MAAMC,KAAKnH,EAAO6F,OAAS,KAKrCD,EAAWkB,OAAS,IAChB9H,EAAMU,MAAM0H,UAEZ9B,EAAcrF,MAAQ2F,EACtB1G,EAAK,oBAAqB0G,KAG1BN,EAAcrF,MAAQ,CAAC2F,EAAW,IAC7B1G,EAAA,oBAAqB0G,EAAW,MAKzCP,EAAapF,QACboF,EAAapF,MAAMA,MAAQ,GAC/B,CA0CK,SAAAyG,EAAiBL,EAAYI,GAC5B,IAEgCY,EAFyBC,EAAArB,EAA3CQ,EAAOc,MAAM,KAAKC,KAAI,SAACtF,GAAA,OAASA,EAAKuF,MAAM,KAEzB,IAAtC,IAAAH,EAAApB,MAAAmB,EAAAC,EAAAnB,KAAAC,MAAsC,CAA3B,IAAAsB,UACH,GAAAA,EAAWC,WAAW,MAElB,GAAAtB,EAAKpE,KAAK2F,cAAcC,SAASH,EAAWE,eACrC,OAAA,OAEJF,GAAAA,EAAWzD,SAAS,KAAM,CAEjC,IAAO6D,EAAgCC,EAApBL,EAAWH,MAAM,KAAG,GAAxB,GACf,GAAIlB,EAAKnE,KAAKyF,WAAWG,GACd,OAAA,CACX,MAGI,GAAAzB,EAAKnE,OAASwF,EACP,OAAA,CAEf,CAAA,CAAA,MAAAf,GAAAW,EAAAxH,EAAA6G,EAAAW,CAAAA,QAAAA,EAAAV,GAGG,CAAA,OAAA,CAAA,CAIX,SAASoB,EAAWzE,GACF+B,EAAArF,MAAM2E,OAAOrB,EAAO,GAE9BvE,EAAMU,MAAM0H,SACZlI,EAAK,oBAAqBoG,EAAcrF,MAAM6G,OAAS,EAAIxB,EAAcrF,MAAQ,MAEjFf,EAAK,oBAAqB,KAC9B,CASJ,SAAS+I,IAEY1C,EAAAtF,MAAMiI,SAAQ,SAACC,GACxBC,IAAAC,gBAAgBF,EAAQG,IAAG,IAEnC/C,EAAiBtF,MAAQ,GAGzBqF,EAAcrF,MAAMiI,SAAQ,SAAC7B,EAAM9C,GAC3B,GAdZ,SAAqB8C,GACV,OAAAA,EAAKnE,KAAKyF,WAAW,SAAQ,CAa5BY,CAAYlC,GAAO,CACb,IAAAiC,EAAMF,IAAII,gBAAgBnC,GAChCd,EAAiBtF,MAAMyE,KAAK,CACxB4D,IAAAA,EACAG,SAAUpC,EAAKpE,KACfsB,MAAAA,GACH,CACL,GACH,CAUL,SAASmF,IACLlD,EAAevF,OAAQ,EACvBwF,EAAcxF,MAAQ,IAAA,CAW1B,SAASuG,EAAemC,GAChB,GAAU,IAAVA,EAAoB,MAAA,MAExB,IAEMC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIJ,GAASE,KAAKE,IAFlC,OAIV,OAAOC,YAAYL,EAAQE,KAAKI,IAJtB,KAI6BL,IAAIM,QAAQ,IAAM,IAH3C,CAAC,IAAK,KAAM,KAAM,MAGqCN,EAAC,QArL1E1H,GACI,WAAA,OAAMlC,EAAMO,cACZ,SAACiF,GACOA,EACI0C,MAAMiC,QAAQ3E,GACAc,EAAArF,MAAAwE,EAAYD,GAEZc,EAAArF,MAAQ,CAACuE,GAG3Bc,EAAcrF,MAAQ,GAENgI,GACxB,GACA,CAAEmB,WAAW,IAIjBlI,GACI,WAAA,OAAMoE,EAAcrF,KAAA,IACpB,WACwBgI,GACxB,GACA,CAAEoB,MAAM,IAgJZC,GAAY,WACS/D,EAAAtF,MAAMiI,SAAQ,SAACC,GACxBC,IAAAC,gBAAgBF,EAAQG,IAAG,GAClC,wBArTD,OAAAlH,IAAAC,EA4GM,MA5GNC,GA4GM,CA3GFC,EAGQ,QAAA,CAHAC,IAAK9B,EAAKA,MAACuC,KAAMP,MAAM,mBACxBhC,EAAKA,MAACiC,OAAQ,IACjB,GAAYjC,EAAAA,MAAMkC,cAAlBP,EAAwD,OAAxDQ,GAAgD,sBAGpDN,EAWE,QAAA,CAVGS,GAAItC,EAAKA,MAACuC,KACVA,KAAMvC,EAAKA,MAACuC,KACbC,KAAK,OACLR,MAAMmC,EAAA,CAAA,eACkBnE,CAAAA,aAAAA,EAAAA,MAAMmD,SAC7B4D,OAAQ/G,EAAKA,MAAC+G,OACdW,SAAU1H,EAAKA,MAAC0H,SAChBhF,SAAU1C,EAAKA,MAAC0C,SAChBG,SAAQmD,UACL,eAAJrG,IAAIgG,eAIGC,EAAArF,MAAc6G,OAAM,GAA/B1F,IAAAC,EAmBM,MAnBN8B,GAmBM,CAlBFoG,EAAA,KAAAA,EAAA,GAAAhI,EAAyC,QAAlC,CAAAG,MAAM,cAAa,WAAO,IACjCH,EAgBK,KAhBLoC,GAgBK,EAfDvC,GAAA,GAAAC,EAcK+B,EAbuB,KAAAoG,EAAAlE,EAAArF,OAAhB,SAAAoG,EAAM9C,cADlBlC,EAcK,KAAA,CAZAmC,IAAKD,EACN7B,MAAM,sDAENH,EAAsF,OAAtFqB,GAAgCc,EAAA2C,EAAKpE,MAAO,KAAEyB,EAAG8C,EAAeH,EAAKE,OAAQ,KAAE,GAC/EhF,EAOS,SAAA,CANLW,KAAK,SACLR,MAAM,0CACLc,QAAK,SAAAiH,UAAEzB,EAAWzE,EAAK,EACvBnB,SAAU1C,EAAKA,MAAC0C,UACpB,MAED,EAAAU,6BAMDyC,EAAAtF,MAAiB6G,OAAM,GAAlC1F,IAAAC,EAyBM,MAzBNqI,GAyBM,CAxBFH,EAAA,KAAAA,EAAA,GAAAhI,EAAuC,QAAhC,CAAAG,MAAM,cAAa,SAAK,IAC/BH,EAsBM,MAtBNoI,GAsBM,EArBFvI,GAAA,GAAAC,EAoBM+B,EApB0B,KAAAoG,EAAAjE,EAAAtF,OAAnB,SAAAkI,EAAS5E,cAAtBlC,EAoBM,MAAA,CApB6CmC,IAAKD,EAAO7B,MAAM,4BACjEH,EAiBM,MAjBNqI,GAiBM,CAhBFrI,EAKE,MAAA,CAJGsI,IAAK1B,EAAQG,IACbwB,IAAK3B,EAAQM,SACd/G,MAAM,oCACLc,QAAK,SAAAiH,GAAE,OAmPpC,SAAwBtB,GACpB1C,EAAcxF,MAAQkI,EACtB3C,EAAevF,OAAQ,CAAA,CArPS8J,CAAe5B,EAAO,cAElC5G,EASS,SAAA,CARLW,KAAK,SACLR,MAAM,qEACNe,MAAA,CAA8EuH,MAAA,OAAAC,OAAA,OAAAC,QAAA,IAAAC,UAAA,wBAC7E3H,QAAO,SAAAiH,GAAA,OAAAzB,EAAWG,EAAQ5E,MAAK,EAC/BnB,SAAU1C,EAAKA,MAAC0C,SACjBM,MAAM,QACT,MAED,EAAA0H,MAEJ7I,EAAmF,QAAnF8I,GAAwD3G,EAAAyE,EAAQM,UAAQ,4BAO1EjD,EAAcvF,WADxBoB,EAwBM,MAAA,OAtBFK,MAAM,qBACN4I,SAAS,KACR9H,QAAOkG,EACRjG,MAAA,CAA4C,mBAAA,wBAE5ClB,EAgBM,MAhBNgJ,GAgBM,CAfFhJ,EAcM,MAdNiJ,GAcM,CAbFjJ,EAGM,MAHNkJ,GAGM,CAFFlJ,EAAqE,KAArEmJ,GAAsChH,EAAe,QAAfiH,EAAAlF,EAAAxF,aAAe,IAAA0K,OAAA,EAAfA,EAAelC,UAAQ,GAC7DlH,EAA0F,SAAA,CAAlFW,KAAK,SAASR,MAAM,4BAA6Bc,QAAOkG,MAEpEnH,EAQM,MARNqJ,GAQM,CANQnF,EAAaxF,WADvBoB,EAME,MAAA,OAJGwI,IAAKpE,EAAaxF,MAACqI,IACnBwB,IAAKrE,EAAaxF,MAACwI,SACpB/G,MAAM,YACNe,MAAA,CAAwB,aAAA,gDAQjC/C,EAAKA,MAACiD,MAAQjD,EAAAA,MAAM+G,QAAU/G,EAAKA,MAAC4G,SAA/ClF,IAAAC,EAKM,MALNwJ,GAKM,CAJSnL,EAAAA,MAAMiD,UAAjBtB,EAA6C,MAAAyJ,GAAApH,EAAnBhE,EAAKA,MAACiD,MAAI,aACzBjD,EAAAA,MAAM+G,QAAjBrF,IAAAC,EAA0D,MAAjC0J,GAAA,YAAYrL,EAAAA,EAAAA,MAAM+G,QAAM,aACtC/G,EAAAA,MAAM4G,SAAjBlF,IAAAC,EAA2E,SAAjD,WAAQqC,EAAG8C,EAAe9G,EAAAA,MAAM4G,UAAO,aACtD5G,EAAAA,MAAMqH,UAAjB3F,IAAAC,EAA+D,SAApC,SAAMqC,EAAGhE,QAAMqH,UAAW,OAAI,yBAIlDrH,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAEM,MAFN2J,GACOtL,EAAAA,EAAAA,MAAMmD,OAAK,+XC3EpB7D,EAAQC,EAKRC,EAAOC,EAKb,SAAS8L,EAAuBC,GACxB,IAACA,EAAkB,MAAA,GAEnB,IAAAC,EAOJ,GALWA,EADc,iBAAdD,EACA,IAAIE,KAAKF,GAETA,EAGPG,MAAMF,EAAKG,WAAmB,MAAA,GAG5B,IAAAC,EAAOJ,EAAKK,cACZC,EAAQvH,OAAOiH,EAAKO,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAM1H,OAAOiH,EAAKU,WAAWF,SAAS,EAAG,KACzCG,EAAQ5H,OAAOiH,EAAKY,YAAYJ,SAAS,EAAG,KAC5CK,EAAU9H,OAAOiH,EAAKc,cAAcN,SAAS,EAAG,KAE/C,MAAA5H,GAAAA,OAAGwH,EAAI,KAAAxH,OAAI0H,EAAK,KAAA1H,OAAI6H,EAAG,KAAA7H,OAAI+H,EAAK,KAAA/H,OAAIiI,EAAO,CAItD,SAASE,EAAiBvG,GACtB,IACM1F,EADS0F,EAAM3F,OACAC,MAErBf,EAAK,oBAAqBe,EAAQ,IAAImL,KAAKnL,GAAS,MAEhDjB,EAAMU,MAAMS,iBACZnB,EAAMU,MAAMS,gBAAgBF,EAAQ,IAAImL,KAAKnL,GAAS,KAC1D,sBAxEA,OAAAmB,IAAAC,EAwBM,MAxBNC,GAwBM,CAvBFC,EAGQ,QAAA,CAHAC,IAAK9B,EAAKA,MAACuC,KAAMP,MAAM,mBACxBhC,EAAKA,MAACiC,OAAQ,IACjB,GAAYjC,EAAAA,MAAMkC,cAAlBP,EAA0D,OAA1DQ,GAAgD,wBAEvCnC,EAAAA,MAAMiD,MAAnBvB,IAAAC,EAAsF,QAAtFS,GAAiEpC,EAAAA,EAAAA,MAAMiD,MAAI,aAE3EpB,EAWE,QAAA,CAVGS,GAAItC,EAAKA,MAACuC,KACXC,KAAK,iBACLR,MAAMmC,EAAA,CAAA,eACkBnE,CAAAA,aAAAA,EAAAA,MAAMmD,SAC7B5C,MAAOgL,EAAuB1L,EAAUA,YACxC+C,QAAO4J,EACP9J,SAAU1C,EAAKA,MAAC0C,SAChB+J,IAAKzM,EAAKA,MAAC0M,QACXC,IAAK3M,EAAKA,MAAC4M,QACXnK,YAAazC,EAAKA,MAACyC,yBAIbzC,EAAAA,MAAMmD,OAAjBzB,IAAAC,EAEM,MAFNsC,GACOjE,EAAAA,EAAAA,MAAMmD,OAAK,qcCyEpB7D,EAAQC,EAIRC,EAAOC,EAMP0D,EAAQxD,EAAI,IACZkN,EAAkBlN,GAAI,GACtBmN,EAAiBnN,EAAuB,IAsErC,SAAAQ,EAAYH,EAAcU,GAC3BV,EAAMS,iBACNT,EAAMS,gBAAgBC,GAI1BV,EAAMmD,MAAQ,GACdA,EAAM5C,MAAQ,EAAA,CA3ElBwM,GAAY,WACQF,EAAAtM,MAAQjB,EAAM0N,QAAQC,cAAA,IAG1CC,GAAU,WAEN,IAAMC,EAAqB,GAC3B7N,EAAM0N,QAAQI,YAAY5E,SAAQ,SAAC6E,GACzBA,EAAAC,OAAO9E,SAAQ,SAACxI,GACTmN,EAAAnI,KAAKhF,EAAM+B,QAAO,GAC9B,IAEC,IAAAwL,EAAaJ,EAASK,QAAO,SAAClL,EAAImL,EAAKC,GAAA,OAAQA,EAAIzI,QAAQ3C,KAAQmL,CAAG,IACxE,GAAAF,EAAWnG,OAAS,EACpB,MAAM,IAAIuG,MAAA,6BAAAtJ,OAAmCU,EAAI,IAAI6I,IAAIL,IAAajG,KAAK,QAI/EwF,EAAevM,MAAQjB,EAAM0N,QAAQI,YAAYtF,KAAI,SAACuF,GAAWQ,OAAAA,EAAAA,EAC1DR,CAAAA,EAAAA,GACHC,CAAAA,EAAAA,CAAAA,OAAQD,EAAMC,OAAOxF,KAAI,SAAC9H,GAAW6N,OAAAA,EAC9B7N,CAAAA,EAAAA,EACL,KACJ,IAGFV,EAAM0N,QAAQI,YAAY5E,SAAQ,SAAC6E,GACzBA,EAAAC,OAAO9E,SAAQ,SAACxI,GAClB,KAAMA,EAAM+B,WAAWzC,EAAMO,YACzB,OAAQG,EAAMwC,MACV,IAAK,WACDlD,EAAMO,WAAWG,EAAM+B,SAAW,GAClC,MACJ,IAAK,OAGL,IAAK,WACKzC,EAAAO,WAAWG,EAAM+B,SAAW,KAClC,MACJ,QACUzC,EAAAO,WAAWG,EAAM+B,SAAW,QAKvB,IAAnB/B,EAAMkC,WACNlC,EAAMkC,UAAW,GAEjB,WAAYlC,QAAmC,IAAzBA,EAAcoE,SACnCpE,EAAcoE,QAAS,QAEL,IAAnBpE,EAAM0C,WACN1C,EAAM0C,UAAW,GAEhB1C,EAAMuC,OACPvC,EAAMuC,KAAOvC,EAAM+B,cAEG,IAAtB/B,EAAMyC,cACAzC,EAAAyC,YAAczC,EAAMiC,OAAS,IAEnC,SAAUjC,QAAiC,IAAvBA,EAAc0F,OACjC1F,EAAc0F,KAAO,GAC1B,GACH,GACJ,IAiCC,IAAAoI,EAAwB,SAAC7H,GACvBA,EAAM3F,SAAW2F,EAAM8H,gBACnBzO,EAAM0N,QAAQC,gBACdJ,EAAgBtM,OAAQ,EACxByN,YAAW,WACPnB,EAAgBtM,OAAQ,IACzB,MAEHf,EAAK,UAGjB,EAGA,SAASyO,IACL9K,EAAM5C,MAAQ,GACd,IAAM2N,EAAmB,GAsBrB,GApBWpB,EAAAvM,MAAMiI,SAAQ,SAAC6E,GACpBA,EAAAC,OAAO9E,SAAQ,SAACxI,GAClBA,EAAMmD,MAAQ,GACd,IAAMzC,EAAMpB,EAAMO,WAAWG,EAAM+B,SAOnC,GANI/B,EAAMkC,UAgCtB,SAAsBxB,GAClB,OACIA,SAEgB,iBAARA,GAAmC,KAAfA,EAAIqH,QAC/BP,MAAMiC,QAAQ/I,IAAuB,IAAfA,EAAI0G,MAAW,CArCZ+G,CAAazN,KACzBV,EAAAmD,MAAQ,MAAQnD,EAAMiC,MAAQ,QACpCiM,EAAQlJ,KAAKhF,IAIbA,EAAMoO,sBAAuB,CAC7B,IAAMnH,EAAMjH,EAAMoO,sBAAsB1N,EAAKpB,EAAMO,YAC/CoH,IACAjH,EAAMmD,OAAS8D,EAAM,KACrB9D,EAAM5C,OAAS0G,EAAM,KACzB,CACJ,GACH,IAGDiH,EAAQ9G,OAAS,EAMjB,OALAjE,EAAM5C,MAAQ,iBACN8N,QAAAC,KACJ,kBACAJ,EAAQpG,KAAI,SAACZ,UAAMA,EAAEnF,OACzB,KAEuB,KAAhBoB,EAAM5C,OAKZf,EAAA,oBAAqBF,EAAMO,YAC3BL,EAAA,SAAUF,EAAMO,aALTwO,QAAAC,KAAK,gBAAiBnL,EAAM5C,MAKT,QAatBgO,EAAA,CACTC,gBAnFJ,SAAyBC,GACN3B,EAAAvM,MAAMiI,SAAQ,SAAC6E,GACpBA,EAAAC,OAAO9E,SAAQ,SAACxI,GACdA,EAAM+B,UAAY0M,IAClBzO,EAAMmD,MAAQ,GAES2J,EAAevM,MAAMmO,MAAK,SAACC,UAC9CA,EAAErB,OAAOoB,MAAK,SAACxH,GAAA,OAAMA,EAAEnF,UAAY0M,GAAgBvH,EAAE/D,KAAK,GAC9D,MAEIA,EAAM5C,MAAQ,IAEtB,GACH,GACJ,yBAzMSjB,EAAM0N,QAAQ4B,eADxBjN,EAiFM,MAAA,OA/EFK,MAAKmC,EAAA,CAAC,qBAAoB,CAAA,4BAKa0I,EAAetM,SAJtDqK,SAAS,KACR,kBAAiBtL,EAAM0N,QAAQ6B,QAC/B,eAAcvP,EAAM0N,QAAQ4B,UAC5B9L,QAAOgL,IAGRjM,EAuEM,MAAA,CAvEDG,MAAKmC,EAAA,CAAC,eAAwB6I,CAAAA,EAAAA,QAAQnG,KAAMmG,EAAOA,QAAC8B,WAAU,0BAAA,QAC/DjN,EAqEM,MArENqC,GAqEM,CApEFrC,EAmEO,OAAA,CAnEAkN,WAAgBd,EAAY,CAAA,cAC/BpM,EAGM,MAHNM,GAGM,CAFFN,EAAgD,KAAhDO,GAA2B4K,EAAAA,EAAAA,QAAQhK,OAAK,GACxCnB,EAA0E,SAAA,CAAlEW,KAAK,SAASR,MAAM,YAAac,uCAAOkM,EAAKA,MAAA,SAAA,OAEzDnN,EAyDM,MAzDN4B,GAyDM,CAxDF5B,EAuDM,MAvDNoC,GAuDM,CAtDFpC,EAoDM,MApDNqB,GAoDM,QAnDFvB,EAkDM+B,EAAA,KAAAoG,EAjDcgD,EAAcvM,OAAA,SAAvB8M,cADX1L,EAkDM,MAAA,CAhDDmC,IAAKuJ,EAAMrK,OAAK,UAChBhB,MAAKmC,EAAEkJ,EAAM4B,cAEdvN,GAAA,GAAAC,EA2CM+B,EA3Ce,KAAAoG,EAAAuD,EAAMC,iBAAftN,cAAZ2B,EA2CM,MAAA,CA3C8BmC,IAAK9D,EAAM+B,UAEvB,SAAV/B,EAAMwC,UADhB0M,EAKEC,EAAA,OAHGnP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,CAAA,EAAA,SAAArJ,GAAA,OAAQP,EAAYH,EAAOU,4DAG3B,aAAVV,EAAMwC,UADrB0M,EAKEE,GAAA,OAHGpP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,CAAA,EAAA,SAAArJ,GAAA,OAAQP,EAAYH,EAAOU,EAAG,0DAG9B,WAAVV,EAAMwC,UADrB0M,EAKEG,EAAA,OAHGrP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,CAAA,EAAA,SAAArJ,GAAA,OAAQP,EAAYH,EAAOU,4DAG3B,aAAVV,EAAMwC,UADrB0M,EAKEI,EAAA,OAHGtP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,CAAA,EAAA,SAAArJ,GAAA,OAAQP,EAAYH,EAAOU,EAAG,0DAG9B,UAAVV,EAAMwC,UADrB0M,EAKEK,GAAA,OAHGvP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,GAAA,SAAArJ,GAAA,OAAQP,EAAYH,EAAOU,EAAG,0DAG9B,SAAVV,EAAMwC,UADrB0M,EAKEM,GAAA,OAHGxP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,GAAA,SAAArJ,GAAQ,OAAAP,EAAYH,EAAOU,EAAG,0DAG9B,aAAVV,EAAMwC,UADrB0M,EAKEO,GAAA,OAHGzP,MAAAA,EACQH,WAAAP,EAAMO,WAAWG,EAAM+B,SAAvB,sBAAA,CAAA,SAAAgI,GAAA,OAAAzK,EAAMO,WAAWG,EAAM+B,SACXgI,GAAA,SAAArJ,GAAQ,OAAAP,EAAYH,EAAOU,EAAG,0FAG3DmB,EAAM,KAAA,KAAA,yBAGHsB,EAAK5C,WAAhBoB,EAAuD,MAAvDyB,GAAuDY,EAAdb,EAAK5C,OAAA,iBAGtDsB,EAGM,MAHNmI,GAGM,CAFFnI,EAAiF,SAAA,CAAzEG,MAAM,uBAAwBc,0CAAekM,EAAKA,MAAA,SAAA,GAAA,CAAA,cAAY,kBACtEnN,EAA8D,SAAA,CAAtDW,KAAK,SAASR,MAAM,wBAAuB,MAAE"}